#include <stdio.h>
#include <iostream>
using namespace std;
const short ndim = 8;

void printArray(int** arr) {
    for(int i=0; i<(2*ndim); i++) {
        for(int j=0; j<ndim; j++) {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
}


int** MoveOneStep(int* p, short Cmax)
{
    int** pp = new int* [ndim];
    int* p1 = new int [ndim];
    int* p2 = new int [ndim];
    short i, j=0, k;
    for (i=0; i<ndim; i++) {
        for (k=0; k<ndim; k++) {
            p1[k] = p[k];
            p2[k] = p[k];
        }
        if(p[i]<Cmax-1) {
            ++p1[i];
            pp[j] = new int [ndim];
            for(k=0; k<ndim; k++) pp[j][k] = p1[k];
            j++;
        }
        if(p[i]>0) {
            --p2[i];
            pp[j] = new int [ndim];
            for(k=0; k<ndim; k++) pp[j][k] = p2[k];
            j++;
        }
    }
    return pp;
}

int main()
{
    short nrange = 12;
    int** coors;
    int startpoint[8] = {6,6,6,6,6,6,6,6};
    coors = MoveOneStep(startpoint,nrange);
    printArray(coors);
    return 0;
}

