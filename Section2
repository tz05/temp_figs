#include <stdio.h>

const short ndim = 8;

long long int** MoveOneStep(long long int* p, short Cmax)
{
    long long int** pp = new long long int* [ndim];
    long long int* p1 = new long long int [ndim];
    long long int* p2 = new long long int [ndim];
    short i, j=0, k;
    for (i=0; i<ndim; i++) {
        p1[i] = p[i];
        p2[i] = p[i];
    }
    for (i=0; i<ndim; i++) {
        if(p[i]<Cmax-1) {
            ++p1[i];
            for(k=0; k<ndim; k++) pp[j][k] = p1[k];
            j++;
        }
        if(p[i]>0) {
            --p2[i];
            for(k=0; k<ndim; k++) pp[j][k] = p2[k];
            j++;
        }
    }
    return pp;
}

int main()
{
    short nrange = 12;
    long long int** coors;
    long long int startpoint[8] = {6,6,6,6,6,6,6,6};
    coors = MoveOneStep(startpoint,nrange);
    printf("%lld",coors[1][3]);
    return 0;
}

